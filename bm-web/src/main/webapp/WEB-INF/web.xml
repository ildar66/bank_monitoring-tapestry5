<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
        PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
    <display-name>bm-web Tapestry 5 Application</display-name>
    <context-param>
        <!-- The only significant configuration for Tapestry 5, this informs Tapestry
of where to look for pages, components and mixins. -->
        <param-name>tapestry.app-package</param-name>
        <param-value>ru.ildar66.bm</param-value>
    </context-param>
	<context-param>
		<!--  We stay with prototype library on old Tapestry components -->
		<param-name>suppress.prototype</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<!--  set aliases for JQuery. -->
		<param-name>jquery.alias</param-name>
		<param-value>$j</param-value>
	</context-param>
    <!-- Spring configuration -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<!-- <param-value>dev</param-value> -->
		<param-value>prod</param-value>
	</context-param>
    <!--
    Specify some additional Modules for two different execution
    modes: development and qa.
    Remember that the default execution mode is production
    -->
    <context-param>
        <param-name>tapestry.development-modules</param-name>
        <param-value>
            ru.ildar66.bm.services.DevelopmentModule
        </param-value>
    </context-param>
    <context-param>
        <param-name>tapestry.qa-modules</param-name>
        <param-value>
            ru.ildar66.bm.services.QaModule
        </param-value>
    </context-param>    
	
    <filter>
        <filter-name>app</filter-name>
        <!-- <filter-class>org.apache.tapestry5.TapestryFilter</filter-class> -->
        <!-- Special filter that adds in a T5 IoC module derived from the Spring WebApplicationContext. -->
  		<filter-class>org.apache.tapestry5.spring.TapestrySpringFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>app</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>
      
